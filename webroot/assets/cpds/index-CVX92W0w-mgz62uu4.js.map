{"version":3,"file":"index-CVX92W0w-mgz62uu4.js","sources":["../../../web/cpds/index.js"],"sourcesContent":["import 'htmx.org';\r\n\r\nimport './index.css';\r\nimport '../__styles__/style.css';\r\nimport '../__styles__/common.scss';\r\nimport '../__scripts__/interactive-effects.js'\r\nimport { callApi, showLoading, hideLoading } from \"../__scripts__/util.js\";\r\n\r\n// Authentication check function\r\nasync function authCheck() {\r\n    const r = await fetch(\"/ids/auth/refresh\", {\r\n        method: \"POST\",\r\n        credentials: \"include\"\r\n    });\r\n    if (!r.ok) {\r\n        window.localStorage.removeItem(\"access_token\");\r\n        window.localStorage.removeItem(\"refresh_token\");\r\n        window.localStorage.setItem(\"is_authenticated\", \"false\");\r\n        return false;\r\n    } else {\r\n        const { access_token, refresh_token } = await r.json();\r\n        window.localStorage.setItem(\"access_token\", access_token);\r\n        window.localStorage.setItem(\"refresh_token\", refresh_token);\r\n        window.localStorage.setItem(\"is_authenticated\", \"true\");\r\n        return true;\r\n    }\r\n}\r\n\r\n// Custom log function for the new console design\r\nfunction logToConsole(elementId, message) {\r\n    const timestamp = new Date().toLocaleTimeString();\r\n    const logLine = `[${timestamp}] ${message}`;\r\n    console.log(logLine);\r\n\r\n    const consoleElement = document.getElementById(elementId);\r\n    if (consoleElement) {\r\n        // Check if console has welcome message and clear it\r\n        const hasWelcome = consoleElement.querySelector('.console-welcome');\r\n        if (hasWelcome) {\r\n            consoleElement.innerHTML = '';\r\n        }\r\n\r\n        // Add the message with proper formatting\r\n        const logDiv = document.createElement('div');\r\n        logDiv.className = 'console-log-line';\r\n        logDiv.innerHTML = `<span class=\"console-timestamp\">${timestamp}</span> ${message}`;\r\n        consoleElement.appendChild(logDiv);\r\n        consoleElement.scrollTop = consoleElement.scrollHeight;\r\n    }\r\n}\r\n\r\n// Update button visibility and auth status\r\nfunction updateButtonVisibility(isAuthenticated) {\r\n    const loginBtn = document.getElementById('login');\r\n    const logoutBtn = document.getElementById('logout');\r\n    const userinfoBtn = document.getElementById('userinfo');\r\n    const callapiBtn = document.getElementById('callapi');\r\n    const switchBtn = document.getElementById('switch');\r\n\r\n    if (isAuthenticated) {\r\n        loginBtn?.classList.add('hidden');\r\n        logoutBtn?.classList.remove('hidden');\r\n        userinfoBtn?.classList.remove('hidden');\r\n        callapiBtn?.classList.remove('hidden');\r\n    } else {\r\n        loginBtn?.classList.remove('hidden');\r\n        logoutBtn?.classList.add('hidden');\r\n        userinfoBtn?.classList.add('hidden');\r\n        callapiBtn?.classList.add('hidden');\r\n    }\r\n\r\n    // Switch button is always visible\r\n    switchBtn?.classList.remove('hidden');\r\n\r\n    // Update auth status indicators\r\n    const authStatus3d = document.getElementById('auth-status-3d');\r\n    const statusDot = document.querySelector('.status-dot');\r\n    const statusText = document.querySelector('.status-text');\r\n\r\n    if (authStatus3d && statusText) {\r\n        if (isAuthenticated) {\r\n            authStatus3d.classList.remove('status-offline');\r\n            authStatus3d.classList.add('status-online');\r\n            statusText.textContent = 'Authenticated';\r\n        } else {\r\n            authStatus3d.classList.remove('status-online');\r\n            authStatus3d.classList.add('status-offline');\r\n            statusText.textContent = 'Not Authenticated';\r\n        }\r\n    }\r\n\r\n    // Update the simple status dot too\r\n    if (statusDot) {\r\n        if (isAuthenticated) {\r\n            statusDot.classList.add('online');\r\n        } else {\r\n            statusDot.classList.remove('online');\r\n        }\r\n    }\r\n}\r\n\r\n// Initialize application - main entry point\r\nwindow.onload = async () => {\r\n    // Ensure loading overlay is visible while we decide\r\n    showLoading();\r\n    let isNeedToHide = false;\r\n\r\n    try {\r\n        const isAuth = await authCheck();\r\n        if (!isAuth) {\r\n            logToConsole(\"out\", \"State: not authenticated, please login\");\r\n            updateButtonVisibility(false);\r\n\r\n            if (window.location.hash.includes(\"switcher\")) {\r\n                console.log(\"Switching from ACEAS to CPDS\");\r\n                // Keep overlay visible while redirecting\r\n                location.href = '/ids/auth/login';\r\n            } else {\r\n                isNeedToHide = true;\r\n            }\r\n            return;\r\n        }\r\n\r\n        logToConsole(\"out\", \"Authenticated successfully\");\r\n        updateButtonVisibility(true);\r\n\r\n        // Set up periodic auth check\r\n        var interval = setInterval(async () => {\r\n            const isAuth = await authCheck();\r\n            if (!isAuth) {\r\n                logToConsole(\"out\", \"State: not authenticated, clearing interval\");\r\n                clearInterval(interval);\r\n                updateButtonVisibility(false);\r\n                return;\r\n            }\r\n        }, 60000); // Check every minute \r\n\r\n        isNeedToHide = true;\r\n    } catch (e) {\r\n        console.error(e);\r\n        logToConsole(\"out\", \"Init error: \" + e);\r\n    } finally {\r\n        // Hide loading overlay after auth check\r\n        if (isNeedToHide) {\r\n            hideLoading();\r\n        }\r\n    }\r\n}\r\n\r\n// Button event handlers\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    // Enhance loading overlay with particle effects\r\n    setTimeout(() => {\r\n        if (typeof window.InteractiveEffects !== 'undefined') {\r\n            window.InteractiveEffects.enhanceLoadingOverlay();\r\n        }\r\n    }, 200);\r\n\r\n    // Login button handler\r\n    const loginBtn = document.getElementById(\"login\");\r\n    if (loginBtn) {\r\n        loginBtn.onclick = () => {\r\n            showLoading();\r\n            location.href = '/ids/auth/login';\r\n        };\r\n    }\r\n\r\n    // Logout button handler\r\n    const logoutBtn = document.getElementById(\"logout\");\r\n    if (logoutBtn) {\r\n        logoutBtn.onclick = () => {\r\n            showLoading();\r\n            location.href = '/ids/auth/logout';\r\n        };\r\n    }\r\n\r\n    // User info button handler\r\n    const userinfoBtn = document.getElementById(\"userinfo\");\r\n    if (userinfoBtn) {\r\n        userinfoBtn.onclick = async () => {\r\n            const isAuthenticated = window.localStorage.getItem(\"is_authenticated\") === \"true\" && window.localStorage.getItem(\"access_token\");\r\n            if (!isAuthenticated) return logToConsole(\"out\", \"Not logged in\");\r\n\r\n            const res = await fetch('/ids/me', {\r\n                credentials: 'include',\r\n                headers: { Authorization: \"Bearer \" + window.localStorage.getItem(\"access_token\") }\r\n            });\r\n\r\n            logToConsole(\"out\", \"userinfo: \" + JSON.stringify(await res.json(), null, 2));\r\n        };\r\n    }\r\n\r\n    // Call API button handler\r\n    const callapiBtn = document.getElementById(\"callapi\");\r\n    if (callapiBtn) {\r\n        callapiBtn.onclick = async () => {\r\n            const isAuthenticated = window.localStorage.getItem(\"is_authenticated\") === \"true\" && window.localStorage.getItem(\"access_token\");\r\n            if (!isAuthenticated) return logToConsole(\"out\", \"Not logged in\");\r\n\r\n            const r = await callApi(\"/cpds/api/hello\", window.localStorage.getItem(\"access_token\"));\r\n            logToConsole(\"out\", `CPDS API [${r.status}]:\\n${r.body}`);\r\n        };\r\n    }\r\n\r\n    // Switch to ACEAS button handler\r\n    const switchBtn = document.getElementById(\"switch\");\r\n    if (switchBtn) {\r\n        switchBtn.onclick = () => {\r\n            window.location.href = `/aceas/#switcher`;\r\n        };\r\n    }\r\n\r\n    // Clear console button handler\r\n    const clearBtn = document.getElementById(\"clear-console\");\r\n    if (clearBtn) {\r\n        clearBtn.addEventListener('click', () => {\r\n            const consoleOutput = document.getElementById('out');\r\n            if (consoleOutput) {\r\n                consoleOutput.innerHTML = `\r\n                    <span class=\"console-welcome\">👥 Welcome to CPDS Personnel Management Platform</span><br>\r\n                    <span class=\"console-info\">🚀 Government SSO ready for interaction...</span><br>\r\n                    <span class=\"console-timestamp\">[${new Date().toLocaleTimeString()}] Console cleared</span>\r\n                `;\r\n            }\r\n        });\r\n    }\r\n\r\n    // Copy console button handler\r\n    const copyBtn = document.getElementById(\"copy-console\");\r\n    if (copyBtn) {\r\n        copyBtn.addEventListener('click', async () => {\r\n            const consoleOutput = document.getElementById('out');\r\n            if (consoleOutput) {\r\n                try {\r\n                    const text = consoleOutput.textContent || consoleOutput.innerText;\r\n                    await navigator.clipboard.writeText(text);\r\n                    logToConsole(\"out\", \"Console content copied to clipboard\");\r\n                } catch (error) {\r\n                    console.error('Failed to copy console content:', error);\r\n                    logToConsole(\"out\", \"Failed to copy console content: \" + error.message);\r\n                }\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\n// Utility functions\r\nwindow.cpdsAuth = {\r\n    clearConsole: () => {\r\n        const consoleOutput = document.getElementById('out');\r\n        if (consoleOutput) {\r\n            consoleOutput.innerHTML = `\r\n                <span class=\"console-welcome\">👥 Welcome to CPDS Personnel Management Platform</span><br>\r\n                <span class=\"console-info\">🚀 Government SSO ready for interaction...</span><br>\r\n                <span class=\"console-timestamp\">[${new Date().toLocaleTimeString()}] Console cleared</span>\r\n            `;\r\n        }\r\n    }\r\n};\r\n\r\n// Smooth scroll for navigation links\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    // Setup smooth scrolling for anchor links\r\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n        anchor.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n            const target = document.querySelector(this.getAttribute('href'));\r\n            if (target) {\r\n                target.scrollIntoView({\r\n                    behavior: 'smooth'\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    // Enhance loading overlay with particle effects\r\n    setTimeout(() => {\r\n        if (typeof window.InteractiveEffects !== 'undefined') {\r\n            window.InteractiveEffects.enhanceLoadingOverlay();\r\n        }\r\n    }, 200);\r\n\r\n    // Add test function for enhanced loading (remove in production)\r\n    window.testEnhancedLoading = function () {\r\n        showLoading('Testing Enhanced 3D Loading...');\r\n        setTimeout(() => {\r\n            hideLoading();\r\n        }, 4000);\r\n    };\r\n\r\n    // Add test function for 3D scroll effects (remove in production)\r\n    window.test3DScrollEffects = function () {\r\n        const effects = [\r\n            'scroll-fade-in', 'scroll-slide-left', 'scroll-slide-right', 'scroll-scale-up',\r\n            'scroll-3d-flip', 'scroll-3d-rotate', 'scroll-3d-bounce', 'scroll-3d-fold',\r\n            'scroll-3d-depth', 'scroll-3d-parallax', 'scroll-3d-perspective'\r\n        ];\r\n\r\n        console.log('🎭 Testing 3D Scroll Effects...');\r\n        effects.forEach(effect => {\r\n            const elements = document.querySelectorAll(`.${effect}`);\r\n            console.log(`${effect}: ${elements.length} elements found`);\r\n        });\r\n        console.log('💡 Scroll down to see the 3D effects in action!');\r\n    };\r\n\r\n    // Test function for true 3D perspective scaling\r\n    window.testPerspectiveScaling = function () {\r\n        console.log('🌟 Testing True 3D Perspective Scaling...');\r\n\r\n        const perspectiveElements = document.querySelectorAll('.scroll-3d-perspective');\r\n        console.log(`Found ${perspectiveElements.length} perspective elements`);\r\n\r\n        perspectiveElements.forEach((el, i) => {\r\n            const rect = el.getBoundingClientRect();\r\n            const centerX = window.innerWidth / 2;\r\n            const centerY = window.innerHeight / 2;\r\n            const elementCenterX = rect.left + rect.width / 2;\r\n            const elementCenterY = rect.top + rect.height / 2;\r\n\r\n            console.log(`Element ${i + 1}:`, {\r\n                position: { x: Math.round(elementCenterX), y: Math.round(elementCenterY) },\r\n                distanceFromCenter: Math.round(Math.sqrt(\r\n                    Math.pow(elementCenterX - centerX, 2) +\r\n                    Math.pow(elementCenterY - centerY, 2)\r\n                )),\r\n                currentTransform: el.style.transform || 'none'\r\n            });\r\n        });\r\n\r\n        console.log('✅ Perspective scaling analysis completed');\r\n        console.log('💡 Scroll or resize to see real-time perspective changes!');\r\n    };\r\n\r\n    console.log('🏗️ CPDS initialized successfully');\r\n    console.log('💡 Try: window.testEnhancedLoading() to test the enhanced loading overlay');\r\n\r\n    // Hide loading overlay after initialization\r\n    setTimeout(() => {\r\n        hideLoading();\r\n    }, 2500);\r\n});"],"names":["authCheck","r","access_token","refresh_token","logToConsole","elementId","message","timestamp","logLine","consoleElement","logDiv","updateButtonVisibility","isAuthenticated","loginBtn","logoutBtn","userinfoBtn","callapiBtn","switchBtn","authStatus3d","statusDot","statusText","showLoading","isNeedToHide","interval","e","hideLoading","res","callApi","clearBtn","consoleOutput","copyBtn","text","error","anchor","target","effect","elements","el","i","rect","centerX","centerY","elementCenterX","elementCenterY"],"mappings":"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"}