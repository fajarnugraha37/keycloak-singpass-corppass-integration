server {
    listen 80;
    listen [::]:80;
    server_name mockpass.localhost;
    
    # Include common security and CORS settings
    include /etc/nginx/common.conf;
    
    # eServices assets (for error pages) - serve from static files
    # everything starts with assets 
    location /assets/ {
        limit_req zone=static burst=100 nodelay;
        root /usr/share/nginx/html;
        try_files $uri $uri/ =404;
        
        # Enable gzip_static for all assets
        gzip_static on;
        
        # Cache static assets
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header Vary "Accept-Encoding";
    }

    # Static assets with long-term caching
    location ~* ^/(?!assets).(css|js|ico|png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot)$ {
        limit_req zone=static burst=100 nodelay;
        include /etc/nginx/proxy.conf;
        proxy_pass http://mockpass:3001;
        
        # Long-term caching for static assets
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
    }
    
    # API endpoints with rate limiting
    location ~* ^/(api|auth|oauth)/ {
        limit_req zone=api burst=100 nodelay;
        include /etc/nginx/proxy.conf;
        proxy_pass http://mockpass:3001;
        
        # Short cache for API responses
        expires 5m;
        add_header Cache-Control "public, must-revalidate";
    }
    
    # Root redirect to custom MockPass info page
    location = / {
        root /usr/share/nginx/html;
        try_files /mockpass/index.html =404;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header X-Vite-Build "fresh";
    }
    
    # Serve mockpass static files (CSS, JS)
    location /mockpass/ {
        root /usr/share/nginx/html;
        try_files $uri $uri/ =404;
        
        # Cache static files
        location ~* \.(css|js)$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
            add_header Vary "Accept-Encoding";
        }
    }
    
    # MockPass info page (legacy endpoint)
    location = /info {
        return 301 /;
    }
    
    # All other requests (HTML, etc.)
    location / {
        limit_req zone=static burst=100 nodelay;
        include /etc/nginx/proxy.conf;
        proxy_pass http://mockpass:3001;
        
        # Short cache for dynamic content
        expires 10m;
        add_header Cache-Control "public, must-revalidate";
    }
    
    # Health check for mockpass
    location /mockpass/health {
        access_log off;
        include /etc/nginx/proxy.conf;
        proxy_pass http://mockpass:3001/health;
    }
    
    # Error pages with cache busting
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header X-Vite-Build "fresh";
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header X-Vite-Build "fresh";
        internal;
    }
}